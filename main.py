import streamlit as st
import pandas as pd
from dotenv import load_dotenv
import os
import openai
from predictor import make_forecast
from gpt_helper import explain_forecast

load_dotenv()
openai.api_key = os.getenv("OPENAI_API_KEY")

st.set_page_config(page_title="–ü—Ä–æ–≥–Ω–æ–∑ —Ü–µ–Ω –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å", layout="centered")

st.title("üìà –ü—Ä–æ–≥–Ω–æ–∑ —Ü–µ–Ω –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –≤ –†–æ—Å—Å–∏–∏")
address = st.text_input("–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ —Ä–∞–π–æ–Ω:")


# –§–∏–∫—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ 2 –≥–æ–¥–∞
dates = pd.date_range(end=pd.Timestamp.today(), periods=730)
prices = [1000000 + i * 1000 for i in range(730)]  # –ª–∏–Ω–µ–π–Ω—ã–π —Ä–æ—Å—Ç

df = pd.DataFrame({'ds': dates, 'y': prices})

if st.button("–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑"):
    if address:
        forecast, forecast_value, trend_str = make_forecast(df)
        current_price = df.iloc[-1]['y']

        st.line_chart(forecast.set_index("ds")["yhat"])
        st.success(f"üí∞ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–∞—è —Ü–µ–Ω–∞ —á–µ—Ä–µ–∑ –≥–æ–¥: {round(forecast_value)} ‚ÇΩ")

        explanation = explain_forecast(
            address=address,
            price=current_price,
            forecast_value=forecast_value,
            trend=trend_str,
            inflation=6.3
        )

        st.info(f"ü§ñ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ: {explanation}")
    else:
        st.warning("–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–ª—è –Ω–∞—á–∞–ª–∞ –∞–Ω–∞–ª–∏–∑–∞.")